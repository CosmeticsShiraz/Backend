package seed

import (
	"fmt"

	"github.com/CosmeticsShiraz/Backend/internal/domain/entity"
	repository "github.com/CosmeticsShiraz/Backend/internal/domain/repository/postgres"
	"github.com/CosmeticsShiraz/Backend/internal/infrastructure/database"
)

var provinceWithCities = map[string][]string{
	"آذربايجان شرقی": {
		"تبريز",
		"مراغه",
		"ميانه",
		"شبستر",
		"مرند",
		"جلفا",
		"سراب",
		"هاديشهر",
		"بناب",
		"تسوج",
		"اهر",
		"هريس",
		"هشترود",
		"ملكان",
		"بستان آباد",
		"ورزقان",
		"اسكو",
		"ممقان",
		"صوفیان",
		"ایلخچی",
		"خسروشهر",
		"باسمنج",
		"سهند",
	},
	"آذربايجان غربی": {
		"اروميه",
		"نقده",
		"ماكو",
		"تكاب",
		"خوي",
		"مهاباد",
		"سر دشت",
		"چالدران",
		"بوكان",
		"مياندوآب",
		"سلماس",
		"شاهين دژ",
		"پيرانشهر",
		"اشنويه",
		"پلدشت",
	},
	"اردبيل": {
		"اردبيل",
		"پارس آباد",
		"خلخال",
		"مشگين شهر",
		"نمين",
		"نير",
		"گرمي",
	},
	"اصفهان": {
		"اصفهان",
		"فلاورجان",
		"گلپايگان",
		"دهاقان",
		"نطنز",
		"تيران",
		"كاشان",
		"اردستان",
		"سميرم",
		"درچه",
		"کوهپایه",
		"مباركه",
		"شهرضا",
		"خميني شهر",
		"نجف آباد",
		"زرين شهر",
		"آران و بيدگل",
		"باغ بهادران",
		"خوانسار",
		"علويجه",
		"عسگران",
		"حاجي اباد",
		"تودشک",
		"ورزنه",
	},
	"ايلام": {
		"ايلام",
		"مهران",
		"دهلران",
		"آبدانان",
		"دره شهر",
		"ايوان",
		"سرابله",
	},
	"بوشهر": {
		"بوشهر",
		"دير",
		"كنگان",
		"گناوه",
		"خورموج",
		"اهرم",
		"برازجان",
		"جم",
		"کاکی",
		"عسلویه",
	},
	"تهران": {
		"تهران",
		"ورامين",
		"فيروزكوه",
		"ري",
		"دماوند",
		"اسلامشهر",
		"رودهن",
		"لواسان",
		"بومهن",
		"تجريش",
		"فشم",
		"كهريزك",
		"پاكدشت",
		"چهاردانگه",
		"شريف آباد",
		"قرچك",
		"باقرشهر",
		"شهريار",
		"رباط كريم",
		"قدس",
		"ملارد",
	},
	"چهارمحال بختیاری": {
		"شهركرد",
		"فارسان",
		"بروجن",
		"چلگرد",
		"اردل",
		"لردگان",
	},
	"خراسان جنوبی": {
		"قائن",
		"فردوس",
		"بيرجند",
		"نهبندان",
		"سربيشه",
		"طبس",
	},
	"خراسان رضوی": {
		"مشهد",
		"نيشابور",
		"سبزوار",
		"كاشمر",
		"گناباد",
		"تربت حيدريه",
		"خواف",
		"تربت جام",
		"تايباد",
		"قوچان",
		"سرخس",
		"فريمان",
		"چناران",
		"درگز",
		"طرقبه",
	},
	"خراسان شمالی": {
		"بجنورد",
		"اسفراين",
		"جاجرم",
		"شيروان",
		"آشخانه",
	},
	"خوزستان": {
		"اهواز",
		"ايرانشهر",
		"شوش",
		"آبادان",
		"خرمشهر",
		"مسجد سليمان",
		"ايذه",
		"شوشتر",
		"انديمشك",
		"سوسنگرد",
		"هويزه",
		"دزفول",
		"شادگان",
		"بندر ماهشهر",
		"بندر امام خميني",
		"بهبهان",
		"رامهرمز",
		"باغ ملك",
		"هنديجان",
		"لالي",
		"رامشیر",
		"حمیدیه",
		"ملاثانی",
		"شادگان",
	},
	"زنجان": {
		"زنجان",
		"ابهر",
		"خدابنده",
		"ماهنشان",
		"خرمدره",
		"آب بر",
		"قيدار",
	},
	"سمنان": {
		"سمنان",
		"شاهرود",
		"گرمسار",
		"ايوانكي",
		"دامغان",
		"بسطام",
	},
	"سيستان و بلوچستان": {
		"زاهدان",
		"چابهار",
		"خاش",
		"سراوان",
		"زابل",
		"سرباز",
		"ايرانشهر",
		"ميرجاوه",
	},
	"فارس": {
		"شيراز",
		"اقليد",
		"داراب",
		"فسا",
		"مرودشت",
		"آباده",
		"كازرون",
		"سپيدان",
		"لار",
		"فيروز آباد",
		"جهرم",
		"استهبان",
		"لامرد",
		"مهر",
		"حاجي آباد",
		"اردكان",
		"صفاشهر",
		"ارسنجان",
		"سوريان",
		"فراشبند",
		"سروستان",
		"زرقان",
		"کوار",
		"بوانات",
		"خرامه",
		"خنج",
	},
	"قزوين": {
		"قزوين",
		"تاكستان",
		"آبيك",
		"بوئين زهرا",
	},
	"قم": {
		"قم",
		"قنوات",
		"جعفریه",
		"کهک",
		"دستجرد",
		"سلفچگان",
	},
	"البرز": {
		"کرج",
		"طالقان",
		"نظرآباد",
		"اشتهارد",
		"هشتگرد",
		"كرج",
		"ماهدشت",
	},
	"كردستان": {
		"سنندج",
		"بانه",
		"بيجار",
		"سقز",
		"قروه",
		"مريوان",
		"صلوات آباد",
		"حسن آباد",
	},
	"کرمان": {
		"کرمان",
		"راور",
		"انار",
		"کوهبنان",
		"رفسنجان",
		"بافت",
		"سيرجان",
		"كهنوج",
		"زرند",
		"بم",
		"جيرفت",
		"بردسير",
	},
	"كرمانشاه": {
		"كرمانشاه",
		"اسلام آباد غرب",
		"كنگاور",
		"سنقر",
		"قصر شيرين",
		"هرسين",
		"صحنه",
		"پاوه",
		"جوانرود",
	},
	"کهگیلویه و بويراحمد": {
		"ياسوج",
		"گچساران",
		"دوگنبدان",
		"سي سخت",
		"دهدشت",
	},
	"گلستان": {
		"گرگان",
		"آق قلا",
		"گنبد كاووس",
		"علي آباد كتول",
		"كردكوی",
		"كلاله",
		"آزاد شهر",
		"راميان",
	},
	"گيلان": {
		"رشت",
		"منجيل",
		"لنگرود",
		"تالش",
		"آستارا",
		"ماسوله",
		"رودبار",
		"فومن",
		"صومعه سرا",
		"هشتپر",
		"ماسال",
		"شفت",
		"املش",
		"لاهیجان",
	},
	"لرستان": {
		"خرم آباد",
		"ماهشهر",
		"دزفول",
		"بروجرد",
		"دورود",
		"اليگودرز",
		"ازنا",
		"نور آباد",
		"كوهدشت",
		"الشتر",
	},
	"مازندران": {
		"ساري",
		"آمل",
		"بابل",
		"بابلسر",
		"بهشهر",
		"تنكابن",
		"جويبار",
		"چالوس",
		"رامسر",
		"قائم شهر",
		"نكا",
		"نور",
		"بلده",
		"نوشهر",
		"محمود آباد",
	},
	"مرکزی": {
		"اراک",
		"آشتيان",
		"تفرش",
		"خمين",
		"دليجان",
		"ساوه",
		"محلات",
		"شازند",
	},
	"هرمزگان": {
		"بندرعباس",
		"قشم",
		"كيش",
		"بندر لنگه",
		"بستك",
		"حاجي آباد",
		"دهبارز",
		"ميناب",
		"بندر جاسك",
		"بندر خمیر",
		"قشم",
	},
	"همدان": {
		"همدان",
		"ملاير",
		"نهاوند",
		"رزن",
		"اسدآباد",
		"بهار",
	},
	"يزد": {
		"يزد",
		"تفت",
		"اردكان",
		"ابركوه",
		"ميبد",
		"بافق",
		"مهريز",
		"اشكذر",
		"هرات",
		"خضرآباد",
		"زارچ",
	},
}

type AddressSeeder struct {
	addressRepository repository.AddressRepository
	db                database.Database
}

func NewAddressSeeder(
	addressRepository repository.AddressRepository,
	db database.Database,
) *AddressSeeder {
	return &AddressSeeder{
		addressRepository: addressRepository,
		db:                db,
	}
}

func (seeder *AddressSeeder) SeedProvincesAndCities() {
	for provinceName, cityNames := range provinceWithCities {
		province, err := seeder.addressRepository.GetProvinceByName(seeder.db, provinceName)
		if err != nil {
			panic(err)
		}
		if province == nil {
			province = &entity.Province{
				Name: provinceName,
			}
			err := seeder.addressRepository.CreateProvince(seeder.db, province)
			if err != nil {
				panic(fmt.Errorf("error creating province %s: %w", provinceName, err))
			}

		}

		for _, cityName := range cityNames {
			city, err := seeder.addressRepository.GetCityByName(seeder.db, cityName)
			if err != nil {
				panic(err)
			}
			if city != nil {
				continue
			}
			city = &entity.City{
				Name:       cityName,
				ProvinceID: province.ID,
			}
			err = seeder.addressRepository.CreateCity(seeder.db, city)
			if err != nil {
				panic(fmt.Errorf("error creating city %s: %w", cityName, err))
			}
		}
	}
}
